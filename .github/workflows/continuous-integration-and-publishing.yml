name: Continuous Integration & Publishing

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

jobs:
  test_build:
    name: Build Testing Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
      
      - name: Build Test Image
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.output.name }}
          context: .
          file: Dockerfile
          target: testing

          platforms: linux/amd64

          tags: |
            icalia-actions/deploy-aws-ecs-service:testing-${{ github.sha }}
            icalia-actions/deploy-aws-ecs-service:testing-latest
          build-args: |
            DEVELOPER_UID=${{env.UID}}
            DEVELOPER_USERNAME=${{env.USER}}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  testing:
    name: Testing
    runs-on: ubuntu-latest
    needs:
      - test_build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Load Testing Image
        id: load_test_image
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          target: testing

          # Make the build result to be available in the Docker client:
          load: true

          platforms: linux/amd64

          tags: |
            icalia-actions/deploy-aws-ecs-service:testing-${{ github.sha }}
            icalia-actions/deploy-aws-ecs-service:testing-latest
          build-args: |
            DEVELOPER_UID=${{env.UID}}
            DEVELOPER_USERNAME=${{env.USER}}
          cache-from: type=gha

      - name: Run Tests
        run: docker-compose --profile ci run --rm tests

  release_build:
    name: Build Release
    runs-on: ubuntu-latest
    needs:
      - test_build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.0
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Build Releaseable Image
        id: build_releaseable_image
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          target: release
          load: true
          platforms: linux/amd64
          tags: |
            icalia-actions/deploy-aws-ecs-service:${{ github.sha }}
            icalia-actions/deploy-aws-ecs-service:latest
          build-args: |
            DEVELOPER_UID=${{env.UID}}
            DEVELOPER_USERNAME=${{env.USER}}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Check if dist is up to date
        run: |
          docker run --rm icalia-actions/deploy-aws-ecs-service:latest cat dist/index.js > dist/index.js
          git diff --quiet --exit-code || echo "::error ::dist/index.js is not up to date - perform a build and commit"
          git diff --quiet --exit-code

  publish_package:
    name: Publish Package
    runs-on: ubuntu-latest
    needs:
      - testing
      - release_build
    if: github.event_name == 'release'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.0
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Load Releaseable Image
        id: load_releaseable_image
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          target: release

          load: true

          platforms: linux/amd64

          tags: |
            icalia-actions/deploy-aws-ecs-service:${{ github.sha }}
            icalia-actions/deploy-aws-ecs-service:latest
          build-args: |
            DEVELOPER_UID=${{env.UID}}
            DEVELOPER_USERNAME=${{env.USER}}
          cache-from: type=gha

      - name: Publish Package
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: docker-compose --profile ci run --rm publisher
